name: ci
on:
  pull_request:
  push:
    branches: [dev, '**/phase*']
    tags: ['v*.*.*']

env:
  GO_VERSION: '1.24.x'

jobs:
  unit-linux:
    runs-on: [self-hosted, Linux, X64, quality]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run tests
        shell: bash
        run: ./scripts/test-slice.sh
      - uses: actions/upload-artifact@v4
        with:
          name: cov-${{ runner.os }}-${{ strategy.job-index }}
          path: coverage.out

  unit-windows:
    runs-on: [self-hosted, Windows, X64, quality]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run tests
        shell: bash
        run: ./scripts/test-slice.sh
      - uses: actions/upload-artifact@v4
        with:
          name: cov-${{ runner.os }}-${{ strategy.job-index }}
          path: coverage.out

  unit-macos:
    needs: [unit-linux, unit-windows]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run tests
        shell: bash
        run: ./scripts/test-slice.sh
      - uses: actions/upload-artifact@v4
        with:
          name: cov-${{ runner.os }}-${{ strategy.job-index }}
          path: coverage.out

  quality:
    needs: unit-linux
    runs-on: [self-hosted, Linux, X64, quality]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/download-artifact@v4
        with:
          path: .
      - name: Merge coverage & gate
        shell: bash
        run: |
          go install github.com/wadey/gocovmerge@v0.0.0-20160331181800-b5bfa59ec0ad
          gocovmerge $(find . -type f -name 'coverage.out') > all.cov
          go tool cover -func all.cov | tee cover.txt
          TOTAL=$(awk '/total:/{sub(/%/,"" );print $3}' cover.txt)
          if (( $(echo "$TOTAL < 93" | bc -l) )); then
            echo "::error ::Coverage $TOTAL% < 93%"; exit 1; fi

  security:
    needs: quality
    runs-on: [self-hosted, Linux, X64, quality]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: GoSec
        run: gosec ./...
      - name: Trivy
        run: trivy fs --exit-code 1 --severity HIGH,CRITICAL .

  docs:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: make docs

  build-matrix:
    needs: security
    strategy:
      matrix:
        target:
          - id: linux
            runner: "[self-hosted, Linux, X64, quality]"
            GOOS: linux
            GOARCH: amd64
          - id: windows
            runner: "[self-hosted, Windows, X64, quality]"
            GOOS: windows
            GOARCH: amd64
          - id: darwin
            runner: macos-latest
            GOOS: darwin
            GOARCH: amd64
    runs-on: ${{ fromJson(matrix.target.runner) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        run: GOOS=${{ matrix.target.GOOS }} GOARCH=${{ matrix.target.GOARCH }} make build
      - uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.target.id }}
          path: bin

  snapshot:
    needs: build-matrix
    runs-on: [self-hosted, Linux]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: bin-linux
          path: dist/linux
      - uses: actions/download-artifact@v4
        with:
          name: bin-windows
          path: dist/windows
      - uses: actions/download-artifact@v4
        with:
          name: bin-darwin
          path: dist/darwin
      - run: |
          zip -r snapshot-${{ github.run_id }}.zip dist
          syft packages dist -o spdx-json > sbom.json
      - uses: actions/upload-artifact@v4
        with:
          name: snapshot-${{ github.run_id }}
          path: snapshot-${{ github.run_id }}.zip

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [quality, security, snapshot]
    runs-on: [self-hosted, Linux]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: bin-linux
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: bin-windows
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: bin-darwin
          path: .
      - name: Sign binaries
        run: cosign sign --yes bin-*
      - uses: softprops/action-gh-release@v2
        with:
          files: bin-* sbom.json
