###############################################################################
# CI – AI-Chat-Fedora42 · PR-only (dev) · coverage-gate · security · docs
###############################################################################
name: CI – AI-Chat-Fedora42

on:
  pull_request:
    branches: [dev]          # run only for PRs into dev
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  pages: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

###############################################################################
env:
  GO_VERSION:          "1.24.3"
  GOMAXPROCS:          "20"

  COVERAGE_GATE:       "80"   # hard floor
  COVERAGE_TOLERANCE:  "1"    # warn if within 1 pt below gate
###############################################################################

defaults:
  run:
    shell: bash -Eeuo pipefail {0}

jobs:

###############################################################################
# 1 ▸ Unit test slices
###############################################################################
  unit-test-slices:
    strategy:
      matrix:
        slice: [1,2,3,4,5,6,7]
    runs-on: [self-hosted, Linux, X64]
    env:
      GO_VERSION: ${{ env.GO_VERSION }}
      SLICES: 7
      SLICE_INDEX: ${{ matrix.slice }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - run: scripts/test_slice.sh
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.slice }}
          path: cover${{ matrix.slice }}.out

  coverage-merge:
    needs: unit-test-slices
    runs-on: ubuntu-latest
    env:
      COVERAGE_GATE: 80
      COVERAGE_TOLERANCE: 1
    steps:
      - uses: actions/download-artifact@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          go install github.com/wadey/gocovmerge@latest
          gocovmerge $(find . -name 'cover*.out') > coverage.out
          pct=$(go tool cover -func=coverage.out | awk '/^total:/ {gsub("%","" );print $3}')
          echo "Merged coverage: ${pct}%"
          if (( ${pct%.*} + COVERAGE_TOLERANCE < COVERAGE_GATE )); then
            echo "::error::coverage below ${COVERAGE_GATE}%"; exit 1
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out
###############################################################################
# 2 ▸ Security scan (gosec)
###############################################################################
  security-scan:
    needs: coverage-merge
    runs-on: [self-hosted, Linux, X64]

    steps:
      - uses: actions/checkout@v4.2.2

      - uses: actions/setup-go@v5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Cache Go modules & build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-

      - name: Run gosec
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec ./...

###############################################################################
# 3 ▸ Docs generation (dev branch only)
###############################################################################
  docs:
    needs: coverage-merge
    if: github.ref == 'refs/heads/dev'
    runs-on: [self-hosted, Linux, X64]

    steps:
      - uses: actions/checkout@v4.2.2

      - uses: actions/setup-go@v5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Cache Go modules & build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-

      - name: Generate API documentation
        run: |
          go install github.com/princjef/gomarkdoc/cmd/gomarkdoc@latest
          mkdir -p docs
          gomarkdoc --output docs/api.md ./...

      - uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs
