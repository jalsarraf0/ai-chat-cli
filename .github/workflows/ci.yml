name: ci
on:
  pull_request:
  push:
    branches: [dev, '**/phase*']

env:
  GO_VERSION: "1.22.x"
  GOLINT_VERSION: v1.54.2
  SHELLCHECK_VERSION: "v0.9.0"
  CACHE_DIR: ${{ github.workspace }}/go-cache

jobs:
  test-linux:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh |
            sh -s -- -b "$(go env GOPATH)/bin" "${GOLINT_VERSION}"
          golangci-lint --version
      - name: Install ShellCheck
        run: |
          curl -L https://github.com/koalaman/shellcheck/releases/download/${SHELLCHECK_VERSION}/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz |
            tar -xJ && sudo mv shellcheck-*/shellcheck /usr/local/bin/
          shellcheck --version
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: ShellCheck
        run: shellcheck dist/prompt/*
      - run: make lint test
        shell: bash
  test-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh |
            sh -s -- -b "$(go env GOPATH)/bin" "${GOLINT_VERSION}"
          golangci-lint --version
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - run: make lint test
        shell: bash
  test-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh |
            sh -s -- -b "$(go env GOPATH)/bin" "${GOLINT_VERSION}"
          golangci-lint --version
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - run: make lint test
        shell: bash
  coverage-gate:
    runs-on: [self-hosted, linux]
    needs: [test-linux, test-macos, test-windows]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          go test -race -covermode=atomic -coverprofile=coverage.out ./...
          pct=$(go tool cover -func=coverage.out | awk '/^total:/ {gsub("%","");print $3}')
          if [ ${pct%.*} -lt 88 ]; then echo "::error::coverage < 88%" && exit 1; fi
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out
  security-scan:
    runs-on: [self-hosted, linux]
    needs: coverage-gate
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go install github.com/securego/gosec/v2/cmd/gosec@latest
      - run: gosec ./...
  docs:
    runs-on: [self-hosted, linux]
    needs: security-scan
    steps:
      - uses: actions/checkout@v4
      - name: Generate Docs
        run: |
          make docs
          git config --global user.name "Jamal Al-Sarraf"
          git config --global user.email "jalsarraf0@gmail.com"
          git add .
          git commit -m "Update generated documentation" || echo "No changes to commit"
