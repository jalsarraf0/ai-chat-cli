name: CI
on:
  pull_request:
  push:
    branches: [dev]
    tags: ['v*']

env:
  GO_VERSION: '1.21'

jobs:
  unit-linux:
    runs-on: [self-hosted, Linux, X64, quality]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: CASE=1/1 ./scripts/test-slice.sh
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: cov-linux
          path: coverage.out

  unit-windows:
    runs-on: [self-hosted, Windows, X64, quality]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: CASE=1/1 ./scripts/test-slice.sh
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: cov-windows
          path: coverage.out

  unit-macos:
    needs: [unit-linux, unit-windows]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: CASE=1/1 ./scripts/test-slice.sh
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: cov-macos
          path: coverage.out

  quality:
    needs: [unit-linux, unit-windows, unit-macos]
    runs-on: [self-hosted, linux, quality]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/download-artifact@v4
        with:
          path: .
      - run: |
          go install github.com/wadey/gocovmerge@latest
          gocovmerge $(find . -name coverage.out) > coverage.out
          go tool cover -func=coverage.out
      - run: |
          pct=$(go tool cover -func=coverage.out | awk '/^total:/ {gsub("%","",$3);print $3}')
          [[ ${pct%.*} -ge 93 ]] || { echo "::error::coverage ${pct}% < 93"; exit 1; }

  security:
    needs: quality
    runs-on: [self-hosted, linux, quality]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: gosec ./...
      - run: govulncheck ./...
      - run: trivy fs --exit-code 1 --severity HIGH,CRITICAL .
      - run: addlicense -check $(go list -f '{{.Dir}}' ./...)

  build-matrix:
    needs: security
    strategy:
      matrix:
        goos: [linux, windows, darwin]
    runs-on: ${{ matrix.goos == 'darwin' && 'macos-latest' || '[self-hosted, Linux, X64, quality]' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: GOOS=${{ matrix.goos }} GOARCH=amd64 make build
      - uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.goos }}
          path: bin

  snapshot:
    needs: build-matrix
    runs-on: [self-hosted, Linux, X64, quality]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: bin-linux
          path: dist/linux
      - uses: actions/download-artifact@v4
        with:
          name: bin-windows
          path: dist/windows
      - uses: actions/download-artifact@v4
        with:
          name: bin-darwin
          path: dist/darwin
      - run: |
          zip -r snapshot-${{ github.run_id }}.zip dist
      - uses: actions/upload-artifact@v4
        with:
          name: snapshot-${{ github.run_id }}
          path: snapshot-${{ github.run_id }}.zip

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [snapshot, quality]
    runs-on: [self-hosted, Linux, X64, quality]
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: bin-linux
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: bin-windows
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: bin-darwin
          path: .
      - name: Sign binaries
        run: cosign sign --yes bin-*
      - name: Verify Rekor
        run: rekor-cli search --artifact bin-* | grep -q 'UUID'
      - uses: softprops/action-gh-release@v2
        with:
          files: bin-* snapshot-*.zip

  docs:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build docs
        run: make docs
      - uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs
