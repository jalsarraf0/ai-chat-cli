name: ci
on:
  pull_request:
  push:
    branches: [dev, '**/phase*']
    tags: ['v*.*.*']

env:
  GO_VERSION: "1.24.x"
  GOLANGCI_INSTALL_VERSION: "latest"
  CACHE_DIR: ${{ github.workspace }}/go-cache

jobs:
  test-linux:
    name: unit-coverage (linux)
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Tidy modules
        run: |
          go mod tidy --go=1.24
          go mod verify
      - name: Bootstrap critical tools
        run: ./scripts/bootstrap-tools.sh install_tools
      - name: Export GOMAXPROCS
        run: echo "GOMAXPROCS=$(getconf _NPROCESSORS_ONLN 2>/dev/null || sysctl -n hw.ncpu)" >> $GITHUB_ENV
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: linux-go-${{ hashFiles('**/go.sum') }}
      - name: Lint
        run: make lint
      - name: Run unit tests
        run: ./scripts/test-slice.sh
      - name: Upload slice coverage
        uses: actions/upload-artifact@v4
        with:
          name: cov-linux-${{ strategy.job-index }}
          path: coverage.out
      - name: Security scan
        run: make security-scan

  test-windows:
    name: unit-coverage (windows)
    runs-on: [self-hosted, windows]
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Tidy modules
        run: |
          go mod tidy --go=1.24
          go mod verify
      - name: Bootstrap critical tools (Windows)
        shell: pwsh
        run: ./scripts/bootstrap.ps1
      - name: Export GOMAXPROCS (Windows)
        shell: pwsh
        run: echo "GOMAXPROCS=$Env:NUMBER_OF_PROCESSORS" >> $Env:GITHUB_ENV
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: windows-go-${{ hashFiles('**/go.sum') }}
      - name: Install portable GNU Make
        shell: pwsh
        run: |
          Invoke-WebRequest -AllowInsecureRedirect -Uri https://gnuwin32.sourceforge.net/downlinks/make-bin-zip.php -OutFile make.zip
          Expand-Archive make.zip -DestinationPath $env:USERPROFILE\gnumake
          Echo "${env:USERPROFILE}\gnumake\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding ascii -Append
      - name: Lint
        run: make lint
      - name: Run unit tests
        run: ./scripts/test-slice.sh
      - name: Upload slice coverage
        uses: actions/upload-artifact@v4
        with:
          name: cov-windows-${{ strategy.job-index }}
          path: coverage.out
      - name: Security scan
        run: make security-scan

  test-macos:
    name: unit-coverage (macos)
    needs: [test-linux, test-windows]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Tidy modules
        run: |
          go mod tidy --go=1.24
          go mod verify
      - name: Bootstrap critical tools
        run: ./scripts/bootstrap-tools.sh install_tools
      - name: Export GOMAXPROCS
        run: echo "GOMAXPROCS=$(getconf _NPROCESSORS_ONLN 2>/dev/null || sysctl -n hw.ncpu)" >> $GITHUB_ENV
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: macos-go-${{ hashFiles('**/go.sum') }}
      - name: Lint
        run: make lint
      - name: Run unit tests
        run: ./scripts/test-slice.sh
      - name: Upload slice coverage
        uses: actions/upload-artifact@v4
        with:
          name: cov-macos-${{ strategy.job-index }}
          path: coverage.out
      - name: Security scan
        run: make security-scan

  bench:
    needs: test-macos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: Run benchmarks
        run: go test -bench ./... -benchmem -run=^$ | tee bench.txt
      - name: Upload bench artefact
        uses: actions/upload-artifact@v4
        with:
          name: bench-linux
          path: bench.txt

  quality:
    needs: test-macos
    runs-on: [self-hosted, linux, quality]
    steps:
      - uses: actions/checkout@v4        # repo already present on runner
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache: true

      - uses: actions/download-artifact@v4
        with:
          pattern: cov-*
          merge-multiple: true

      - name: Bootstrap tools
        run: ./scripts/bootstrap-tools.sh install_tools

      - name: Install gocovmerge
        run: go install github.com/wadey/gocovmerge@latest

      - name: Merge coverage
        run: |
          gocovmerge $(find .. -name 'coverage.out') > all.cov
          go tool cover -func all.cov | grep total:
          TOTAL=$(go tool cover -func all.cov | awk '/total:/ {print $3}' | tr -d '%')
          awk -v t="$TOTAL" 'BEGIN {exit (t < 92)}'

      - name: Lint (all linters)
        run: golangci-lint run ./...

      - name: Staticcheck
        run: staticcheck ./...

      - name: Security scan – gosec
        run: gosec ./...

      - name: Security scan – govulncheck
        run: govulncheck ./...
  embed-drift:
    needs: test-macos
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Bootstrap critical tools
        if: runner.os != 'Windows'
        run: ./scripts/bootstrap-tools.sh
      - name: Bootstrap critical tools (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: ./scripts/bootstrap.ps1
      - run: make embed-check
  docs:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: make docs

  snapshot:
    runs-on: [self-hosted, linux]
    needs: docs
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Bootstrap critical tools
        if: runner.os != 'Windows'
        run: ./scripts/bootstrap-tools.sh
      - name: Bootstrap critical tools (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: ./scripts/bootstrap.ps1
      - run: make snapshot
      - uses: actions/upload-artifact@v4
        with:
          name: snapshot
          path: dist

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: [self-hosted, linux]
    needs: docs
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Bootstrap critical tools
        if: runner.os != 'Windows'
        run: ./scripts/bootstrap-tools.sh
      - name: Bootstrap critical tools (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: ./scripts/bootstrap.ps1
      - name: Install Cosign
        run: go install github.com/sigstore/cosign/v2/cmd/cosign@latest
      - run: goreleaser release --clean --skip=publish
      - name: Sign & attach SBOM
        run: |
          cosign sign --yes dist/*.tar.gz
          cosign attach sbom --yes dist/*.tar.gz
