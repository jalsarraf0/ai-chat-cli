name: ci

on:
  push:
    branches: [dev, '**']
    tags: ['v*']
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: gofmt -w $(git ls-files '*.go')
      - run: go vet ./...
      - run: golangci-lint run ./...

  test-matrix:
    needs: lint
    runs-on: [self-hosted, linux]
    strategy:
      matrix:
        go: ['1.23','1.24','1.25']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - run: go test -race -covermode=atomic -coverprofile=coverage.out ./...
      - run: |
          pct=$(go tool cover -func=coverage.out | awk '/^total:/ {gsub("%","", $3); print $3}')
          [[ ${pct%.*} -ge 93 ]] || { echo "::error :: coverage ${pct}% (< 93%)"; exit 1; }

  security:
    needs: test-matrix
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: gosec
        uses: securego/gosec-action@v1
        with:
          version: latest
          args: ./...
      - name: License audit
        run: addlicense -check $(go list -f '{{.Dir}}' ./...)
      - uses: aquasecurity/trivy-action@v0
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          exit-code: 1
