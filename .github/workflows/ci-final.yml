# .github/workflows/final-ci.yml
name: CI + Release

on:
  push:
    branches: [dev]
    tags: ['v*']           # triggers again on version tags
  pull_request:
    branches: [dev]
  workflow_dispatch:       # manual trigger

env:
  GO_BIN: $HOME/go/bin
  COVERAGE_THRESHOLD: 90
  TRIVY_VERSION: 0.63.0
  GOLANGCI_VERSION: 2.1.6
  GOSEC_VERSION: v2.19.0
  OSV_VERSION: v1.7.3

# All jobs can upload artifacts or releases
permissions:
  contents: write
  packages: write

# ─────────────────────────── Jobs ────────────────────────────
jobs:
  # 1 ── Lint ─────────────────────────────────────────────────
  lint:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Lint
        run: bash lint_cli.sh

  # 2 ── Docs ────────────────────────────────────────────────
  docs:
    needs: lint
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install NPM packages
        run: npm install
      - name: Audit NPM packages
        run: npm audit
      - name: Build docs
        run: make docs

  # 3 ── Security ────────────────────────────────────────────
  security:
    needs: lint
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@${{ env.GOSEC_VERSION }}
      - name: Run gosec
        run: gosec ./... || true
      - name: Install osv-scanner
        run: go install github.com/google/osv-scanner/cmd/osv-scanner@${{ env.OSV_VERSION }}
      - name: Run osv-scanner
        run: osv-scanner .
      - name: Install trivy
        run: |
          wget -qO- https://github.com/aquasecurity/trivy/releases/download/v${{ env.TRIVY_VERSION }}/trivy_${{ env.TRIVY_VERSION }}_Linux-64bit.tar.gz \
            | sudo tar -xz -C /usr/local/bin trivy
      - name: Run trivy
        run: |
          trivy fs --download-db-only
          trivy fs --exit-code 1 --severity HIGH,CRITICAL .
      - name: Install addlicense
        run: go install github.com/google/addlicense@latest
      - name: Check licenses
        run: addlicense -check $(git ls-files '*.go')

  # 4 ── Tests & Coverage ────────────────────────────────────
  test:
    needs: [lint, docs]
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run tests
        run: |
          go test -race -covermode=atomic -coverprofile=coverage.out ./...
          pct=$(go tool cover -func=coverage.out | awk '/^total:/ {gsub("%", ""); print $3}')
          echo "total coverage = ${pct}%"
          if [[ ${pct%.*} -lt $COVERAGE_THRESHOLD ]]; then
            echo "::error ::coverage ${pct}% < ${COVERAGE_THRESHOLD}%" && exit 1
          fi

  # 5 ── Verify go.sum ───────────────────────────────────────
  verify-go-sum:
    needs: test
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - name: Verify go.sum
        run: test -f go.sum

  # 6 ── Release (runs only on v* tags) ──────────────────────
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [security, verify-go-sum]
    runs-on: [self-hosted, linux]

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: GoReleaser release
        uses: goreleaser/goreleaser-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: v2.10.2
          args: release --clean          # builds tar.gz, .deb, .rpm
