name: Final CI

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

env:
  GO_BIN: $HOME/go/bin
  COVERAGE_THRESHOLD: 90
  TRIVY_VERSION: 0.63.0
  GOLANGCI_VERSION: 2.1.6
  GOSEC_VERSION: v2.19.0
  OSV_VERSION: v1.7.3
  GORELEASER_VERSION: v2.10.2

jobs:
  lint:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Lint
        run: bash lint_cli.sh

  docs:
    needs: lint
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install NPM packages
        run: npm install
      - name: Audit NPM packages
        run: npm audit
      - name: Build docs
        run: make docs

  security:
    needs: lint
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@${GOSEC_VERSION}
      - name: Run gosec
        run: gosec ./... || true
      - name: Install osv-scanner
        run: go install github.com/google/osv-scanner/cmd/osv-scanner@${OSV_VERSION}
      - name: Run osv-scanner
        run: osv-scanner .
      - name: Install trivy
        run: wget -qO- https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz | sudo tar -xz -C /usr/local/bin trivy
      - name: Run trivy
        run: |
          trivy fs --download-db-only
          trivy fs --exit-code 1 --severity HIGH,CRITICAL .
      - name: Install addlicense
        run: go install github.com/google/addlicense@latest
      - name: Check licenses
        run: addlicense -check $(git ls-files '*.go')

  test:
    needs: [lint, docs]
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run tests
        run: |
          go test -race -covermode=atomic -coverprofile=coverage.out ./...
          pct=$(go tool cover -func=coverage.out | awk '/^total:/ {gsub("%", ""); print $3}')
          echo "total coverage = ${pct}%"
          if [[ ${pct%.*} -lt $COVERAGE_THRESHOLD ]]; then
            echo "::error ::coverage ${pct}% < ${COVERAGE_THRESHOLD}%" && exit 1
          fi

  verify-go-sum:
    needs: test
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - name: Verify go.sum
        run: test -f go.sum

  goreleaser:
    needs: [security, verify-go-sum]
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - name: Install GoReleaser
        run: |
          curl -sSfL https://github.com/goreleaser/goreleaser/releases/download/${GORELEASER_VERSION}/goreleaser_Linux_x86_64.tar.gz \
            | sudo tar -xz -C /usr/local/bin goreleaser
          goreleaser --version
