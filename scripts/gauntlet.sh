#!/usr/bin/env bash
set -euo pipefail
log(){ printf '[%(%H:%M:%S)T] \u26A1  %s\n' -1 "$*"; }

BRANCH=$(git rev-parse --abbrev-ref HEAD)
if git remote get-url origin >/dev/null 2>&1; then
  git fetch origin
  BASE_COMMIT=$(git merge-base origin/$BRANCH HEAD)
else
  BASE_COMMIT=$(git rev-parse HEAD^)
fi

log "Checking for meaningful changes..."
if ! git diff --name-only "$BASE_COMMIT" | grep -E '\.(go|md|sh|yml)$' >/dev/null; then
  log "No relevant changes â€“ exiting."; exit 0; fi

# Early exit if docs-only changes detected
if go run -tags tools "$PWD/tools/ci-sieve" -range "$BASE_COMMIT..HEAD"; then
  log "Docs-only commit detected. Skipping pipeline."; exit 0
fi

[[ ${CI:-} && $BRANCH != "main" ]] && export SKIP_RELEASE=1


log "Running format/lint..."; make format lint
log "Checking license headers..."; addlicense -check $(git ls-files '*.go')

log "Security scan..."
command -v gosec >/dev/null || go install github.com/securego/gosec/v2/cmd/gosec@latest
command -v govulncheck >/dev/null || go install golang.org/x/vuln/cmd/govulncheck@latest
make security

log "Running tests..."; make test

log "Verifying go.sum..."; go mod tidy
git diff --exit-code go.sum || { echo "::error::go.sum drift detected"; exit 1; }

log "Generating docs..."; ./scripts/generate-docs.sh
if ! git diff --quiet docs README.md; then
  git add docs README.md
  git commit -m "docs: auto-generated by gauntlet" || true
fi

if [[ -z ${SKIP_RELEASE:-} && $BRANCH == "main" ]]; then
  log "Running release..."; make release
else
  log "Release skipped (branch=$BRANCH)"
fi

log "Full gauntlet passed locally"
