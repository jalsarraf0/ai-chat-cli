//go:build ignore

package main

import (
	"crypto/sha256"
	"encoding/hex"
	"os"
	"path/filepath"
	"sort"
	"text/template"
)

type asset struct {
	Name string
	Sum  string
}

func main() {
	var assets []asset
	base := "internal/assets"
	patterns := []string{"templates/*.tmpl", "themes/*.json"}
	for _, p := range patterns {
		matches, err := filepath.Glob(filepath.Join(base, p))
		if err != nil {
			panic(err)
		}
		for _, m := range matches {
			b, err := os.ReadFile(m)
			if err != nil {
				panic(err)
			}
			h := sha256.Sum256(b)
			name := filepath.ToSlash(m[len(base)+1:])
			assets = append(assets, asset{name, hex.EncodeToString(h[:])})
		}
	}
	sort.Slice(assets, func(i, j int) bool { return assets[i].Name < assets[j].Name })
	tmpl := template.Must(template.New("gen").Parse(`package assets

// Code generated by scripts/embedgen.go; DO NOT EDIT.

var assetSHA256 = map[string]string{
{{- range . }}
    "{{ .Name }}": "{{ .Sum }}",
{{- end }}
}
`))
	f, err := os.Create(filepath.Join(base, "assets_gen.go"))
	if err != nil {
		panic(err)
	}
	defer f.Close()
	if err := tmpl.Execute(f, assets); err != nil {
		panic(err)
	}
	if err := f.Close(); err != nil {
		panic(err)
	}
}
